import { initializeApp } from 'firebase/app';
import { getAuth, signInWithEmailAndPassword } from 'firebase/auth';
import { getFirestore, collection, getDocs, updateDoc, doc } from 'firebase/firestore';
import axios from 'axios';

// üîê ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Firebase Config ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const firebaseConfig = {
  apiKey: "AIzaSyCcioU-ZElHNPjbFMIeLDr0UjHC-LRFxJY",
  authDomain: "project-scripting-e2427.firebaseapp.com",
  projectId: "project-scripting-e2427",
  storageBucket: "project-scripting-e2427.appspot.com",
  messagingSenderId: "55288593922",
  appId: "1:55288593922:web:87bea2a526ce44bd65711b"
};

// ‚úÖ Login ‡∏î‡πâ‡∏ß‡∏¢ email & password
const EMAIL = "aphichetautsanew@gmail.com";
const PASSWORD = "0989965402";

// ‚úÖ API Key ‡∏à‡∏≤‡∏Å LocationIQ
const LOCATIONIQ_API_KEY = "pk.8480f03915285ddcb4dbcc718b32297d";

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getFirestore(app);

// üîç ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å LocationIQ
const fetchCoordsFromLocationIQ = async (address) => {
  const encoded = encodeURIComponent(address);
  const url = `https://us1.locationiq.com/v1/search.php?key=${LOCATIONIQ_API_KEY}&q=${encoded}&format=json`;

  try {
    const response = await axios.get(url);
    const result = response.data[0];
    if (result) {
      return {
        latitude: parseFloat(result.lat),
        longitude: parseFloat(result.lon),
      };
    } else {
      console.warn("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å LocationIQ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:", address);
      return null;
    }
  } catch (error) {
    console.error("‚ùå Error fetching from LocationIQ:", error.message);
    return null;
  }
};

// üéØ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏£‡πâ‡∏≤‡∏ô
const updateAllShops = async () => {
  try {
    // ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Firebase Authentication
    await signInWithEmailAndPassword(auth, EMAIL, PASSWORD);
    console.log("‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");

    const snapshot = await getDocs(collection(db, 'shops'));
    let count = 0;

    // ‡∏•‡∏π‡∏õ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ (‡∏£‡πâ‡∏≤‡∏ô)
    for (const docSnap of snapshot.docs) {
      const data = docSnap.data();

      // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏û‡∏¥‡∏Å‡∏±‡∏î (coords) ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà (pinAddress)
      if (!data.coords && data.pinAddress) {
        // ‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà (pinAddress) ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡∏Å‡∏±‡∏î
        const coords = await fetchCoordsFromLocationIQ(data.pinAddress);
        if (coords) {
          // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏ô Firestore
          await updateDoc(doc(db, 'shops', docSnap.id), { coords });
          console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏£‡πâ‡∏≤‡∏ô: ${data.shopName}`);
          count++;
        } else {
          console.warn(`‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏Ç‡∏≠‡∏á: ${data.shopName}`);
        }
      }
    }

    console.log(`üéâ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡πâ‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
  } catch (err) {
    console.error("‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err.message);
  }
};

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å //
updateAllShops();
